{"version":3,"sources":["Views/Home.js","Components/Navbar/Nabvar.js","Components/Footer/Footer.js","helpers/api.js","services/patientList.service.js","services/personnelList.service.js","services/sillonList.service.js","services/salaList.service.js","Components/AdmissionForm/AdmissionForm.js","Views/Admission.js","Components/AdmissionForm/PersonnelForm.js","Views/PersonnelAdmission.js","Components/PersonnelList/PersonnelList.js","Views/PersonnelListView.js","Components/AdmissionForm/SillonForm.js","Views/SillonAdmission.js","Components/SillonesList/SillonesList.js","Views/SillonesListView.js","Components/AdmissionForm/SalaForm.js","Views/SalaAdmission.js","Components/SalasList/SalasList.js","Views/SalasListView.js","App.js","serviceWorker.js","index.js"],"names":["Home","className","MyNavbar","Navbar","bg","variant","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","to","Link","Footer","api","axios","create","baseURL","timeout","patientService","getAll","get","show","pacienteId","data","post","personnelService","personalId","sillonService","sillonId","salaService","salaId","Component","Page2","PersonnelForm","props","SubmitHandler","event","preventDefault","console","log","state","personnelName","personnelRut","personnelAge","personnelBirth","personnelAddress","personnelNumber","personnelEspecialidad","Date","toUTCString","nombre","rut","edad","fechaNacimiento","direccion","telefono","especialidad","turnos","personnelShifts","password","personnelPassword","cargo","personnelCargo","then","response","catch","error","alert","NameChangeHandler","setState","target","value","RutChangeHandler","AgeChangeHandler","BirthChangeHandler","AddressChangeHandler","NumberChangeHandler","EspecialidadChangeHandler","ShiftsChangeHandler","PasswordChangeHandler","CargoChangeHandler","today","date","d","month","getMonth","day","getDate","year","getFullYear","length","join","formatDate","style","padding","margin","border","textAlign","Form","marginBottom","onSubmit","this","Group","controlId","Label","Control","type","onChange","max","Button","Page1","Container","fluid","Row","Col","personnelList","onChangeHandler","personnels","ListGroup","Item","map","personnel","fecha","getTime","dateString","birthDate","age","m","getAge","key","onClick","overflowY","height","PersonnelListView","PersonnelList","SillonForm","sillonEstado","sillonSala","sillonPaciente","estado","sala","paciente","EstadoChangeHandler","SalaChangeHandler","PacienteChangeHandler","sillonesList","sillons","sillonList","sillon","SillonesListView","SillonesList","salaForm","salaNombre","salaCapacidad","capacidad","NombreChangeHandler","CapacidadChangeHandler","SalaForm","salasList","salas","salaList","SalasListView","SalasList","App","Nabvar","exact","path","component","PersonnelAdmission","SillonAdmission","SalaAdmission","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.9dd06329.chunk.js","sourcesContent":["import React from 'react';\n\n\n\n\nfunction Home(){\n    return (\n        <div className='container'>\n            \n            <h1>Quimioterapia</h1>\n            <h1>by AFKbros</h1>\n        </div>\n        );\n}\n\nexport  default Home; ","import React from 'react';\n\n\nimport { Navbar,Nav } from 'react-bootstrap'\n\nimport { LinkContainer } from 'react-router-bootstrap'\n\n\nfunction MyNavbar(){\n    return (\n        <Navbar bg=\"dark\" variant='dark' expand=\"lg\">\n            <Navbar.Brand href=\"#home\">Quimioterapia</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                <LinkContainer to='/home'><Nav.Link >Home</Nav.Link> \n                </LinkContainer>\n                <LinkContainer to='/admission'><Nav.Link >Ingresar Personal</Nav.Link> \n                </LinkContainer>\n                <LinkContainer to='/personal'><Nav.Link >Ver Personal</Nav.Link> \n                </LinkContainer>\n                <LinkContainer to='/admissionS'><Nav.Link >Ingresar sillon</Nav.Link> \n                </LinkContainer>\n                <LinkContainer to='/sillones'><Nav.Link >Ver sillones</Nav.Link> \n                </LinkContainer>\n                <LinkContainer to='/admissionSala'><Nav.Link >Ingresar sala</Nav.Link> \n                </LinkContainer>\n                <LinkContainer to='/salas'><Nav.Link >Ver salas</Nav.Link> \n                </LinkContainer>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n        \n        );\n}\n\nexport  default MyNavbar; ","import React from 'react';\nimport './Footer.css'\n\nfunction Footer(){\n    return (\n        <footer className= ' border-top  border-dark bg-dark text-muted '>\n            <p>Template hecho por RipSopaipaman Team</p>\n            <p>Modificada y adaptada por los AFKbros</p>\n        </footer>\n        );\n}\n\nexport  default Footer; ","import axios from 'axios'\nexport const api= axios.create({\n    baseURL: 'https://isw-front-end.herokuapp.com/',\n    timeout: 20000\n})\n","import {api} from '../helpers/api'\n\nconst basePath= 'v1';\n\nfunction getAll (){\n    return api.get(`${basePath}/pacientes`)\n};\nfunction show (pacienteId){\n    return api.get(`${basePath}/id=${pacienteId}`)\n};\nfunction create (data){\n    return api.post(`${basePath}/paciente`,data)\n};\n\nexport const patientService ={\n    getAll,\n    show,\n    create\n};\n","import {api} from '../helpers/api'\r\n\r\nconst basePath= 'v1';\r\n\r\nfunction getAll (){\r\n    return api.get(`${basePath}/personal`)\r\n};\r\nfunction show (personalId){\r\n    return api.get(`${basePath}/id=${personalId}`)\r\n};\r\nfunction create (data){\r\n    return api.post(`${basePath}/personal`,data)\r\n};\r\n\r\nexport const personnelService ={\r\n    getAll,\r\n    show,\r\n    create\r\n};\r\n","import {api} from '../helpers/api'\r\n\r\nconst basePath= 'v1';\r\n\r\nfunction getAll (){\r\n    return api.get(`${basePath}/sillon`)\r\n};\r\nfunction show (sillonId){\r\n    return api.get(`${basePath}/id=${sillonId}`)\r\n};\r\nfunction create (data){\r\n    return api.post(`${basePath}/sillon`,data)\r\n};\r\n\r\nexport const sillonService ={\r\n    getAll,\r\n    show,\r\n    create\r\n};\r\n","import {api} from '../helpers/api'\r\n\r\nconst basePath= 'v1';\r\n\r\nfunction getAll (){\r\n    return api.get(`${basePath}/sala`)\r\n};\r\nfunction show (salaId){\r\n    return api.get(`${basePath}/id=${salaId}`)\r\n};\r\nfunction create (data){\r\n    return api.post(`${basePath}/sala`,data)\r\n};\r\n\r\nexport const salaService ={\r\n    getAll,\r\n    show,\r\n    create\r\n};","import React, {Component} from 'react'\nimport {Form,Button,FormCheck,} from 'react-bootstrap'\nimport {patientService} from '../../services'\n\nclass AdmissionForm extends Component{\n\n    constructor(props){\n        super(props);\n        this.state= {\n            patientName:'',\n            patientRut:'',\n            patientBirth: null,\n            patientSex:'m',\n            patientEmail:'',\n            patientNumber:'',\n            patientDiagnostic:'',\n            patientcode: '001',\n        }\n\n    };\n\n    SubmitHandler = (event)=>{\n        event.preventDefault()\n        console.log(this.state);\n        //simple validation\n        if(this.state.patientName!=='' && this.state.patientRut !=='' && this.state.patientBirth!==null\n            && this.state.patientEmail!=='' && this.state.patientNumber !=='' && this.state.patientDiagnostic!==null ){\n            // alert('axios thing');\n            let date= new Date().toUTCString();\n            \n            let data = {\n                nombre: this.state.patientName,\n                rut: this.state.patientRut,\n                fechaNacimiento: this.state.patientBirth,\n                sexo:this.state.patientSex,\n                email: this.state.patientEmail,\n                telefono: this.state.patientNumber,\n                fechaCreacion: date,\n                diagnostico: this.state.patientDiagnostic,\n                codigo: this.state.patientcode\n            }\n            console.log(data)\n            patientService.create(data)\n            .then((response)=>console.log(response.data))\n            .catch(error=> console.log(error));\n        }\n        else alert('rellene todos los campos');\n    };\n    NameChangeHandler = (event)=>{\n        event.preventDefault();\n        this.setState({...this.state, patientName: event.target.value});\n        //console.log(this.state);\n    };\n\n    RutChangeHandler = (event)=>{\n        event.preventDefault();\n        this.setState({...this.state, patientRut: event.target.value});\n        //console.log(this.state);\n    };\n    BirthChangeHandler = (event)=>{\n        event.preventDefault();\n        this.setState({...this.state, patientBirth: event.target.value});\n        //console.log(this.state);\n    };\n\n    onRadioChange = (event) => {\n        this.setState({\n          patientSex: event.target.value\n        });\n         //console.log(this.state);\n    };\n    EmailChangeHandler = (event)=>{\n        event.preventDefault();\n        this.setState({...this.state, patientEmail: event.target.value});\n        //console.log(this.state);\n    };\n    NumberChangeHandler = (event)=>{\n        event.preventDefault();\n        this.setState({...this.state, patientNumber: event.target.value});\n        //console.log(this.state);\n    };\n    DiagnosticChangeHandler = (event)=>{\n        event.preventDefault();\n        this.setState({...this.state, patientDiagnostic: event.target.value});\n        //console.log(this.state);\n    };\n    \n    render(){\n        const styles={\n            padding:'15px',\n            margin: '15px',\n            border: '2px solid black',\n            textAlign: 'left'\n\n        }\n        const form={\n            marginBottom: '10px'\n        };\n        let date= new Date()\n        function formatDate(date) {\n            var d = new Date(date),\n                month = '' + (d.getMonth() + 1),\n                day = '' + d.getDate(),\n                year = d.getFullYear();\n        \n            if (month.length < 2) \n                month = '0' + month;\n            if (day.length < 2) \n                day = '0' + day;\n        \n            return [year, month, day].join('-');\n        }\n        let today=formatDate(date)\n        return(\n            <div style={styles}>\n                <p>{today}</p>\n                <h3 style={{textAlign: \"center\"}}> Ingreso de pacientes</h3>\n                <Form style={form} onSubmit={this.SubmitHandler}>\n                \n                <Form.Group controlId=\"Name\" >\n                    <Form.Label>Nombre del paciente:</Form.Label>\n                    <Form.Control type=\"text\" onChange={this.NameChangeHandler} />\n                </Form.Group>\n\n                <Form.Group controlId=\"FormRut\" >\n                    <Form.Label>Rut del paciente:</Form.Label>\n                    <Form.Control type=\"text\"  onChange={this.RutChangeHandler} />\n                </Form.Group>\n\n                <Form.Group controlId=\"FormBirth\" >\n                <Form.Label>Fecha de Nacimiento del paciente:</Form.Label>\n                <Form.Control type=\"date\" max={today} onChange={this.BirthChangeHandler} />\n                </Form.Group>\n\n                <Form.Group controlId=\"FormSex\" >\n                <Form.Label>Sexo del paciente:</Form.Label>\n                <FormCheck   checked={this.state.patientSex==='m'} type='radio' value='m' label='Hombre' onChange={this.onRadioChange}/>\n                <FormCheck    checked={this.state.patientSex==='f'} type='radio' value='f' label='Mujer' onChange={this.onRadioChange}/>\n                </Form.Group>\n\n                <Form.Group controlId=\"FormEmail\" >\n                    <Form.Label>Email del paciente:</Form.Label>\n                    <Form.Control type=\"text\"  onChange={this.EmailChangeHandler} />\n                </Form.Group>\n\n                <Form.Group controlId=\"FormNumber\" >\n                    <Form.Label>Numero de telefono del paciente:</Form.Label>\n                    <Form.Control type=\"text\"  onChange={this.NumberChangeHandler} />\n                </Form.Group>\n\n                <Form.Group controlId=\"FormDiagnostic\" >\n                    <Form.Label>Diagnostico:</Form.Label>\n                    <Form.Control type=\"text\"  onChange={this.DiagnosticChangeHandler} />\n                </Form.Group>\n\n                <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                </Button>\n                </Form>\n            </div>\n        )\n    }\n\n};\n\n\nexport default AdmissionForm;\n\n","import React from 'react';\nimport AdmissionForm from '../Components/AdmissionForm/AdmissionForm';\nimport { Container,Row,Col } from 'react-bootstrap'\n\n\nfunction Page2(){\n   \n    return (\n        <Container fluid=\"md\" >\n            <Row>\n                <Col ><AdmissionForm/></Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default Page2;","import React, {Component} from 'react'\r\nimport {Form,Button,FormCheck,} from 'react-bootstrap'\r\nimport {personnelService} from '../../services'\r\n\r\nclass PersonnelForm extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state= {\r\n            personnelName:'',\r\n            personnelRut:'',\r\n            personnelAge: null,\r\n            personnelBirth: '',\r\n            personnelAddress:'',\r\n            personnelNumber:'',\r\n            personnelEspecialidad:'',\r\n            personnelShifts:'',\r\n            personnelPassword: null,\r\n            personnelCargo: ''\r\n        }\r\n\r\n    };\r\n\r\n    SubmitHandler = (event)=>{\r\n        event.preventDefault()\r\n        console.log(this.state);\r\n        //simple validation\r\n        if(this.state.personnelName!=='' && this.state.personnelRut !=='' && this.state.personnelAge!==null\r\n            && this.state.personnelBirth!=='' && this.state.personnelAddress !=='' && this.state.personnelNumber !=='' && this.state.personnelEspecialidad!=='' ){\r\n            // alert('axios thing');\r\n            let date= new Date().toUTCString();\r\n            \r\n            let data = {\r\n                nombre: this.state.personnelName,\r\n                rut: this.state.personnelRut,\r\n                edad:this.state.personnelAge,\r\n                fechaNacimiento: this.state.personnelBirth,\r\n                direccion: this.state.personnelAddress,\r\n                telefono: this.state.personnelNumber,\r\n                //fechaCreacion: date,\r\n                especialidad: this.state.personnelEspecialidad,\r\n                turnos: this.state.personnelShifts,\r\n                password: this.state.personnelPassword,\r\n                cargo: this.state.personnelCargo\r\n            }\r\n            console.log(data)\r\n            personnelService.create(data)\r\n            .then((response)=>console.log(response.data))\r\n            .catch(error=> console.log(error));\r\n        }\r\n        else alert('rellene todos los campos');\r\n    };\r\n\r\n    NameChangeHandler = (event)=>{\r\n        event.preventDefault();\r\n        this.setState({...this.state, personnelName: event.target.value});\r\n        //console.log(this.state);\r\n    };\r\n\r\n    RutChangeHandler = (event)=>{\r\n        event.preventDefault();\r\n        this.setState({...this.state, personnelRut: event.target.value});\r\n        //console.log(this.state);\r\n    };\r\n    \r\n    AgeChangeHandler = (event)=>{\r\n        event.preventDefault();\r\n        this.setState({...this.state, personnelAge: event.target.value});\r\n        //console.log(this.state);\r\n    };\r\n\r\n    BirthChangeHandler = (event)=>{\r\n        event.preventDefault();\r\n        this.setState({...this.state, personnelBirth: event.target.value});\r\n        //console.log(this.state);\r\n    };\r\n\r\n    AddressChangeHandler = (event)=>{\r\n        event.preventDefault();\r\n        this.setState({...this.state, personnelAddress: event.target.value});\r\n        //console.log(this.state);\r\n    };\r\n\r\n    NumberChangeHandler = (event)=>{\r\n        event.preventDefault();\r\n        this.setState({...this.state, personnelNumber: event.target.value});\r\n        //console.log(this.state);\r\n    };\r\n    \r\n    EspecialidadChangeHandler = (event)=>{\r\n        event.preventDefault();\r\n        this.setState({...this.state, personnelEspecialidad: event.target.value});\r\n        //console.log(this.state);\r\n    };\r\n\r\n    ShiftsChangeHandler = (event)=>{\r\n        event.preventDefault();\r\n        this.setState({...this.state, personnelShifts: event.target.value});\r\n        //console.log(this.state);\r\n    };\r\n    \r\n    PasswordChangeHandler = (event)=>{\r\n        event.preventDefault();\r\n        this.setState({...this.state, personnelPassword: event.target.value});\r\n        //console.log(this.state);\r\n    };\r\n    \r\n    CargoChangeHandler = (event)=>{\r\n        event.preventDefault();\r\n        this.setState({...this.state, personnelCargo: event.target.value});\r\n        //console.log(this.state);\r\n    };\r\n    \r\n    \r\n    render(){\r\n        const styles={\r\n            padding:'15px',\r\n            margin: '15px',\r\n            border: '2px solid black',\r\n            textAlign: 'left'\r\n\r\n        }\r\n        const form={\r\n            marginBottom: '10px'\r\n        };\r\n        let date= new Date()\r\n        function formatDate(date) {\r\n            var d = new Date(date),\r\n                month = '' + (d.getMonth() + 1),\r\n                day = '' + d.getDate(),\r\n                year = d.getFullYear();\r\n        \r\n            if (month.length < 2) \r\n                month = '0' + month;\r\n            if (day.length < 2) \r\n                day = '0' + day;\r\n        \r\n            return [year, month, day].join('-');\r\n        }\r\n        let today=formatDate(date)\r\n        return(\r\n            <div style={styles}>\r\n                <p>{today}</p>\r\n                <h3 style={{textAlign: \"center\"}}> Ingreso de personal</h3>\r\n                <Form style={form} onSubmit={this.SubmitHandler}>\r\n                \r\n                <Form.Group controlId=\"Name\" >\r\n                    <Form.Label>Nombre del personal:</Form.Label>\r\n                    <Form.Control type=\"text\" onChange={this.NameChangeHandler} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"FormRut\" >\r\n                    <Form.Label>Rut del personal:</Form.Label>\r\n                    <Form.Control type=\"text\"  onChange={this.RutChangeHandler} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"FormAge\" >\r\n                    <Form.Label>Edad del personal:</Form.Label>\r\n                    <Form.Control type= 'text'  onChange={this.AgeChangeHandler} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"FormBirth\" >\r\n                <Form.Label>Fecha de Nacimiento del personal:</Form.Label>\r\n                <Form.Control type=\"date\" max={today} onChange={this.BirthChangeHandler} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"FormAddress\" >\r\n                    <Form.Label>Direccion del personal:</Form.Label>\r\n                    <Form.Control type=\"text\"  onChange={this.AddressChangeHandler} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"FormEspecialidad\" >\r\n                    <Form.Label>Especialidad del personal:</Form.Label>\r\n                    <Form.Control type=\"text\"  onChange={this.EspecialidadChangeHandler} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"FormShifts\" >\r\n                    <Form.Label>Turnos de trabajo del personal:</Form.Label>\r\n                    <Form.Control type=\"text\"  onChange={this.ShiftsChangeHandler} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"FormPassword\" >\r\n                    <Form.Label>Password del personal:</Form.Label>\r\n                    <Form.Control type=\"text\"  onChange={this.PasswordChangeHandler} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"FormCargo\" >\r\n                    <Form.Label>Cargo del personal:</Form.Label>\r\n                    <Form.Control type=\"text\"  onChange={this.CargoChangeHandler} />\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Submit\r\n                </Button>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n};\r\n\r\n\r\nexport default PersonnelForm;\r\n\r\n","import React from 'react';\r\nimport PersonnelForm from '../Components/AdmissionForm/PersonnelForm';\r\nimport { Container,Row,Col } from 'react-bootstrap'\r\n\r\n\r\nfunction Page1(){\r\n   \r\n    return (\r\n        <Container fluid=\"md\" >\r\n            <Row>\r\n                <Col ><PersonnelForm/></Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Page1;","import React,{Component} from 'react'\r\nimport {ListGroup, Button} from 'react-bootstrap'\r\nimport { faMale,faFemale,faRedo } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {personnelService} from '../../services'\r\n\r\nfunction getAge(dateString) \r\n{\r\n    var today = new Date();\r\n    var birthDate = new Date(dateString);\r\n    var age = today.getFullYear() - birthDate.getFullYear();\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) \r\n    {\r\n        age--;\r\n    }\r\n    return age;\r\n}\r\nclass personnelList extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            personnels:[]\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        personnelService.getAll()\r\n        .then((response)=>{\r\n            // console.log('RESPUESTA GET ALL PACIENTES:');\r\n            // console.log(response.data);\r\n            this.setState({\r\n                ...this.state,\r\n                personnels:response.data\r\n            })\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n    };\r\n\r\n    onChangeHandler = (event)=>{\r\n        personnelService.getAll()\r\n        .then((response)=>{\r\n            // console.log('RESPUESTA GET ALL PACIENTES:');\r\n            // console.log(response.data);\r\n            this.setState({\r\n                ...this.state,\r\n                personnels:response.data\r\n            })\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n        alert('refreshing list')\r\n    };\r\n\r\n    render(){\r\n        //sytles\r\n        const div={\r\n            padding:'15px',\r\n            margin: '15px',\r\n            textAlign: 'left',\r\n            border: '2px solid black'\r\n            \r\n        };\r\n        const  listGroup={\r\n            marginBottom: '10px',\r\n            overflowY:'scroll',\r\n            height: '420px'\r\n        };\r\n\r\n        //list personnels (JSX)\r\n        let personnels =this.state.personnels;\r\n        let personnelList;\r\n        //if empty list item saying 'no personnels'\r\n        if(personnels.length===0)personnelList = <ListGroup.Item className='border'><p><strong>No hay personal ingresado</strong></p></ListGroup.Item>\r\n        \r\n        //else proper list item \r\n        else{ personnelList = this.state.personnels.map(personnel =>{\r\n            //default values of the icon set to male\r\n            let color={color:'blue'};\r\n            let fecha = new Date(personnel.fechaNacimiento).getTime();\r\n            let fechahoy = new Date().getTime();\r\n            let edad= getAge(fecha)\r\n            \r\n            \r\n            return(\r\n            <ListGroup.Item className='border' key={personnel.id}>\r\n            <p><strong>Personal: </strong>{personnel.nombre} </p>\r\n            <p><strong>Edad: </strong>{edad}</p>\r\n            <p><strong>Especialidad: </strong>{personnel.especialidad}</p>\r\n            </ListGroup.Item>\r\n            )\r\n            });\r\n        }\r\n        return(\r\n            <div style={div}>\r\n                <h3 style={{textAlign: \"center\"}}>Personal ingresado</h3>\r\n                <small>Refresh </small> \r\n                <Button  className= 'btn btn-light' onClick={this.onChangeHandler} >\r\n                     </Button>\r\n                <ListGroup style={listGroup} className='border' >\r\n                {personnelList}\r\n                </ListGroup>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default personnelList;","import React from 'react';\r\nimport { Container,Row,Col } from 'react-bootstrap'\r\nimport PersonnelList from '../Components/PersonnelList/PersonnelList';\r\n\r\n\r\n\r\nfunction PersonnelListView(){\r\n   \r\n    return (\r\n        <Container fluid=\"md\" >\r\n            <Row>\r\n                <Col><PersonnelList/></Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default PersonnelListView;","import React, {Component} from 'react'\r\nimport {Form,Button,FormCheck,} from 'react-bootstrap'\r\nimport {sillonService} from '../../services'\r\n\r\nclass SillonForm extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state= {\r\n            sillonEstado:'',\r\n            sillonSala:'',\r\n            sillonPaciente: null\r\n        }\r\n\r\n    };\r\n\r\n    SubmitHandler = (event)=>{\r\n        event.preventDefault()\r\n        console.log(this.state);\r\n        //simple validation\r\n        if(this.state.sillonEstado!=='' && this.state.sillonSala !=='' && this.state.sillonPaciente!==null ){\r\n            // alert('axios thing');\r\n            let date= new Date().toUTCString();\r\n            \r\n            let data = {\r\n                estado: this.state.sillonEstado,\r\n                sala: this.state.sillonSala,\r\n                paciente:this.state.sillonPaciente,\r\n                //fechaCreacion: date,\r\n            }\r\n            console.log(data)\r\n            sillonService.create(data)\r\n            .then((response)=>console.log(response.data))\r\n            .catch(error=> console.log(error));\r\n        }\r\n        else alert('rellene todos los campos');\r\n    };\r\n\r\n    EstadoChangeHandler = (event)=>{\r\n        event.preventDefault();\r\n        this.setState({...this.state, sillonEstado: event.target.value});\r\n        //console.log(this.state);\r\n    };\r\n\r\n    SalaChangeHandler = (event)=>{\r\n        event.preventDefault();\r\n        this.setState({...this.state, sillonSala: event.target.value});\r\n        //console.log(this.state);\r\n    };\r\n    \r\n    PacienteChangeHandler = (event)=>{\r\n        event.preventDefault();\r\n        this.setState({...this.state, sillonPaciente: event.target.value});\r\n        //console.log(this.state);\r\n    };\r\n\r\n \r\n    render(){\r\n        const styles={\r\n            padding:'15px',\r\n            margin: '15px',\r\n            border: '2px solid black',\r\n            textAlign: 'left'\r\n\r\n        }\r\n        const form={\r\n            marginBottom: '10px'\r\n        };\r\n        let date= new Date()\r\n        function formatDate(date) {\r\n            var d = new Date(date),\r\n                month = '' + (d.getMonth() + 1),\r\n                day = '' + d.getDate(),\r\n                year = d.getFullYear();\r\n        \r\n            if (month.length < 2) \r\n                month = '0' + month;\r\n            if (day.length < 2) \r\n                day = '0' + day;\r\n        \r\n            return [year, month, day].join('-');\r\n        }\r\n        let today=formatDate(date)\r\n        return(\r\n            <div style={styles}>\r\n                <p>{today}</p>\r\n                <h3 style={{textAlign: \"center\"}}> Ingreso de sillon</h3>\r\n                <Form style={form} onSubmit={this.SubmitHandler}>\r\n                \r\n                <Form.Group controlId=\"Estado\" >\r\n                    <Form.Label>Estado del sillon:</Form.Label>\r\n                    <Form.Control type=\"text\" onChange={this.EstadoChangeHandler} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"FormSala\" >\r\n                    <Form.Label>Sala a la que pertenece el sillon:</Form.Label>\r\n                    <Form.Control type=\"text\"  onChange={this.SalaChangeHandler} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"FormPaciente\" >\r\n                    <Form.Label>ID del paciente que ocupa el sillon (de estar ocupado):</Form.Label>\r\n                    <Form.Control type= 'text'  onChange={this.PacienteChangeHandler} />\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Submit\r\n                </Button>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n};\r\n\r\n\r\nexport default SillonForm;","import React from 'react';\r\nimport SillonForm from '../Components/AdmissionForm/SillonForm';\r\nimport { Container,Row,Col } from 'react-bootstrap'\r\n\r\n\r\nfunction Page1(){\r\n   \r\n    return (\r\n        <Container fluid=\"md\" >\r\n            <Row>\r\n                <Col ><SillonForm/></Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Page1;","import React,{Component} from 'react'\r\nimport {ListGroup, Button} from 'react-bootstrap'\r\nimport {sillonService} from '../../services'\r\n\r\nclass sillonesList extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            sillons:[]\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        sillonService.getAll()\r\n        .then((response)=>{\r\n            // console.log('RESPUESTA GET ALL PACIENTES:');\r\n            // console.log(response.data);\r\n            this.setState({\r\n                ...this.state,\r\n                sillons:response.data\r\n            })\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n    };\r\n\r\n    onChangeHandler = (event)=>{\r\n        sillonService.getAll()\r\n        .then((response)=>{\r\n            // console.log('RESPUESTA GET ALL PACIENTES:');\r\n            // console.log(response.data);\r\n            this.setState({\r\n                ...this.state,\r\n                sillons:response.data\r\n            })\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n        alert('refreshing list')\r\n    };\r\n\r\n    render(){\r\n        //sytles\r\n        const div={\r\n            padding:'15px',\r\n            margin: '15px',\r\n            textAlign: 'left',\r\n            border: '2px solid black'\r\n            \r\n        };\r\n        const  listGroup={\r\n            marginBottom: '10px',\r\n            overflowY:'scroll',\r\n            height: '420px'\r\n        };\r\n\r\n        //list sillons (JSX)\r\n        let sillons =this.state.sillons;\r\n        let sillonList;\r\n        //if empty list item saying 'no sillons'\r\n        if(sillons.length===0)sillonList = <ListGroup.Item className='border'><p><strong>No hay sillones ingresados</strong></p></ListGroup.Item>\r\n        \r\n        //else proper list item \r\n        else{ sillonList = this.state.sillons.map(sillon =>{\r\n            //default values of the icon set to male\r\n            let color={color:'blue'};\r\n            let fechahoy = new Date().getTime();\r\n            \r\n            \r\n            return(\r\n            <ListGroup.Item className='border' key={sillon.id}>\r\n            <p><strong>Estado: </strong>{sillon.estado} </p>\r\n            <p><strong>Sala: </strong>{sillon.sala}</p>\r\n            <p><strong>Paciente: </strong>{sillon.paciente}</p>\r\n            </ListGroup.Item>\r\n            )\r\n            });\r\n        }\r\n        return(\r\n            <div style={div}>\r\n                <h3 style={{textAlign: \"center\"}}>Sillones ingresados</h3>\r\n                <small>Refresh </small> \r\n                <Button  className= 'btn btn-light' onClick={this.onChangeHandler} >\r\n                     </Button>\r\n                <ListGroup style={listGroup} className='border' >\r\n                {sillonList}\r\n                </ListGroup>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default sillonesList;","import React from 'react';\r\nimport { Container,Row,Col } from 'react-bootstrap'\r\nimport SillonesList from '../Components/SillonesList/SillonesList';\r\n\r\n\r\n\r\nfunction SillonesListView(){\r\n   \r\n    return (\r\n        <Container fluid=\"md\" >\r\n            <Row>\r\n                <Col><SillonesList/></Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default SillonesListView;","import React, {Component} from 'react'\r\nimport {Form,Button,FormCheck,} from 'react-bootstrap'\r\nimport {salaService} from '../../services'\r\n\r\nclass salaForm extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state= {\r\n            salaNombre:'',\r\n            salaCapacidad:null\r\n        }\r\n\r\n    };\r\n\r\n    SubmitHandler = (event)=>{\r\n        event.preventDefault()\r\n        console.log(this.state);\r\n        //simple validation\r\n        if(this.state.salaNombre!=='' && this.state.salaCapacidad !==null ){\r\n            // alert('axios thing');\r\n            let date= new Date().toUTCString();\r\n            \r\n            let data = {\r\n                nombre: this.state.salaNombre,\r\n                capacidad: this.state.salaCapacidad,\r\n                //fechaCreacion: date,\r\n            }\r\n            console.log(data)\r\n            salaService.create(data)\r\n            .then((response)=>console.log(response.data))\r\n            .catch(error=> console.log(error));\r\n        }\r\n        else alert('rellene todos los campos');\r\n    };\r\n\r\n    NombreChangeHandler = (event)=>{\r\n        event.preventDefault();\r\n        this.setState({...this.state, salaNombre: event.target.value});\r\n        //console.log(this.state);\r\n    };\r\n\r\n    CapacidadChangeHandler = (event)=>{\r\n        event.preventDefault();\r\n        this.setState({...this.state, salaCapacidad: event.target.value});\r\n        //console.log(this.state);\r\n    };\r\n    \r\n \r\n    render(){\r\n        const styles={\r\n            padding:'15px',\r\n            margin: '15px',\r\n            border: '2px solid black',\r\n            textAlign: 'left'\r\n\r\n        }\r\n        const form={\r\n            marginBottom: '10px'\r\n        };\r\n        let date= new Date()\r\n        function formatDate(date) {\r\n            var d = new Date(date),\r\n                month = '' + (d.getMonth() + 1),\r\n                day = '' + d.getDate(),\r\n                year = d.getFullYear();\r\n        \r\n            if (month.length < 2) \r\n                month = '0' + month;\r\n            if (day.length < 2) \r\n                day = '0' + day;\r\n        \r\n            return [year, month, day].join('-');\r\n        }\r\n        let today=formatDate(date)\r\n        return(\r\n            <div style={styles}>\r\n                <p>{today}</p>\r\n                <h3 style={{textAlign: \"center\"}}> Ingreso de sala</h3>\r\n                <Form style={form} onSubmit={this.SubmitHandler}>\r\n                \r\n                <Form.Group controlId=\"Estado\" >\r\n                    <Form.Label>Nombre de la sala:</Form.Label>\r\n                    <Form.Control type=\"text\" onChange={this.EstadoChangeHandler} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"FormCapacidad\" >\r\n                    <Form.Label>Capacidad de la sala:</Form.Label>\r\n                    <Form.Control type=\"text\"  onChange={this.SalaChangeHandler} />\r\n                </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Submit\r\n                </Button>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n};\r\n\r\n\r\nexport default salaForm;","import React from 'react';\r\nimport SalaForm from '../Components/AdmissionForm/SalaForm';\r\nimport { Container,Row,Col } from 'react-bootstrap'\r\n\r\n\r\nfunction Page1(){\r\n   \r\n    return (\r\n        <Container fluid=\"md\" >\r\n            <Row>\r\n                <Col ><SalaForm/></Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Page1;","import React,{Component} from 'react'\r\nimport {ListGroup, Button} from 'react-bootstrap'\r\nimport {salaService} from '../../services'\r\n\r\nclass salasList extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            salas:[]\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        salaService.getAll()\r\n        .then((response)=>{\r\n            // console.log('RESPUESTA GET ALL PACIENTES:');\r\n            // console.log(response.data);\r\n            this.setState({\r\n                ...this.state,\r\n                salas:response.data\r\n            })\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n    };\r\n\r\n    onChangeHandler = (event)=>{\r\n        salaService.getAll()\r\n        .then((response)=>{\r\n            // console.log('RESPUESTA GET ALL PACIENTES:');\r\n            // console.log(response.data);\r\n            this.setState({\r\n                ...this.state,\r\n                salas:response.data\r\n            })\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n        alert('refreshing list')\r\n    };\r\n\r\n    render(){\r\n        //sytles\r\n        const div={\r\n            padding:'15px',\r\n            margin: '15px',\r\n            textAlign: 'left',\r\n            border: '2px solid black'\r\n            \r\n        };\r\n        const  listGroup={\r\n            marginBottom: '10px',\r\n            overflowY:'scroll',\r\n            height: '420px'\r\n        };\r\n\r\n        //list salas (JSX)\r\n        let salas =this.state.salas;\r\n        let salaList;\r\n        //if empty list item saying 'no salas'\r\n        if(salas.length===0)salaList = <ListGroup.Item className='border'><p><strong>No hay salas ingresadas</strong></p></ListGroup.Item>\r\n        \r\n        //else proper list item \r\n        else{ salaList = this.state.salas.map(sala =>{\r\n            //default values of the icon set to male\r\n            let color={color:'blue'};\r\n            let fechahoy = new Date().getTime();\r\n            \r\n            \r\n            return(\r\n            <ListGroup.Item className='border' key={sala.id}>\r\n            <p><strong>Nombre: </strong>{sala.nombre} </p>\r\n            <p><strong>Capacidad: </strong>{sala.capacidad}</p>\r\n            </ListGroup.Item>\r\n            )\r\n            });\r\n        }\r\n        return(\r\n            <div style={div}>\r\n                <h3 style={{textAlign: \"center\"}}>Salas ingresadas</h3>\r\n                <small>Refresh </small> \r\n                <Button  className= 'btn btn-light' onClick={this.onChangeHandler} >\r\n                     </Button>\r\n                <ListGroup style={listGroup} className='border' >\r\n                {salaList}\r\n                </ListGroup>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default salasList;","import React from 'react';\r\nimport { Container,Row,Col } from 'react-bootstrap'\r\nimport SalasList from '../Components/SalasList/SalasList';\r\n\r\n\r\n\r\nfunction SalasListView(){\r\n   \r\n    return (\r\n        <Container fluid=\"md\" >\r\n            <Row>\r\n                <Col><SalasList/></Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default SalasListView;","import React from 'react';\nimport Home from './Views/Home'\nimport Nabvar from './Components/Navbar/Nabvar'\nimport Footer from './Components/Footer/Footer'\nimport {  BrowserRouter as Router,  Route} from 'react-router-dom';\nimport './App.css';\n\nimport Admission from './Views/Admission'\nimport PersonnelAdmission from './Views/PersonnelAdmission'\nimport PersonnelListView from './Views/PersonnelListView'\n\nimport SillonAdmission from './Views/SillonAdmission'\nimport SillonesListView from './Views/SillonesListView';\n\nimport SalaAdmission from './Views/SalaAdmission'\nimport SalasListView from './Views/SalasListView';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n      <Nabvar></Nabvar>\n        <Route\n        exact\n        path='/home'\n        component={Home}        />\n        <Route\n        exact\n        path='/admission'\n        component={PersonnelAdmission}/>\n        <Route\n        exact\n        path='/personal'\n        component={PersonnelListView}/>\n        <Route\n        exact\n        path='/admissionS'\n        component={SillonAdmission}/>\n        <Route\n        exact\n        path='/sillones'\n        component={SillonesListView}/>\n        <Route\n        exact\n        path='/admissionSala'\n        component={SalaAdmission}/>\n        <Route\n        exact\n        path='/salas'\n        component={SalasListView}/>\n      </Router>\n      \n      <Footer></Footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}